
# abort if noninteractive
[[ $- != *i* ]] && return

# prefer sane symlink `cd` behavior
set -o physical

# prevent clobbering (use >| if needed)
set -o noclobber

# allow autocd
shopt -s autocd

# prevent accidental ctrl-d exits
set -o ignoreeof

# vim readline bindings
set -o vi

# map ctrl+l to forcibly clear after issues
bind -x '"\C-l": clear'

# gpg pinentry issue
gpgtty=$(tty)
export GPG_TTY=$gpgtty

# vim works.
export EDITOR=vim

export TERM=xterm-256color

# history whatnot
# (prepend sensitive commands with a space to avoid tracking)
shopt -s histappend
HISTCONTROL=ignorespace
HISTFILESIZE=1000000
HISTSIZE=1000000
shopt -s cmdhist

# completion, a far-cry from Zsh
bind "set show-all-if-ambiguous on"
bind "set completion-ignore-case on"

# so lean on FZF for better completion
source "$(fzf-share)/completion.bash"
source "$(fzf-share)/key-bindings.bash"
export FZF_COMPLETION_TRIGGER=''
export FZF_COMPLETION_OPTS='--select-1'
export FZF_DEFAULT_OPTS='--color=16 --inline-info'
export FZF_CTRL_T_OPTS='--select-1'

# use fd instead of the default find for path candidates
_fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}

# ctrl+p for password management
bind -x '"\C-p": pc $(_passfind)'
_passfind() {
  passwords=$(\find "$HOME"/.password-store/*.gpg)
  nukethis="$HOME/.password-store/"
  andthis=".gpg"
  passwords="${passwords//$nukethis/}"
  passwords="${passwords//$andthis/}"
  echo "$passwords" | fzf --height 8 --reverse --select-1
}

# include certain private and public scripts and binaries in $PATH
# this probably should be in some kind of ~/.profile isntead, fwiw.
PATH=$PATH:/_projects/bin
PATH=$PATH:/_projects/env/scripts


############################################################
##########  prompt  ########################################
############################################################

prompt_command() {
  # store last return code, as subsequent commands will overwrite it.
  RETC="$?"

  # store nix-shell status to display later, if nonempty
  # (displays derivation name if exported as $NIX_SHELL_NAME)
  if [[ $IN_NIX_SHELL != "" ]]; then
    [[ $NIX_SHELL_NAME != "" ]] && NS=" $NIX_SHELL_NAME " || NS=" $IN_NIX_SHELL "
  else
    NS=' '
  fi

  # prompt showing the user, hostname, cwd, and return codes.
  # the extra \[..\] is needed to avoid a tab-complete issue.
  bold='\[\e[1m\]'
  txt='\[\e[30m\]'
  bg='\[\e[47m\]'
  reset='\[\e[0m\]'
  PS1="$bold$bg$txt \u@\h \w$NS$RETC $reset "
  PS2="$bold$bg$txt > $reset "

  # append each line to history individually.
  history -a
}

PROMPT_DIRTRIM=3
PROMPT_COMMAND=prompt_command

# patches for ls coloring
# https://geoff.greer.fm/lscolors/
export CLICOLOR=1
export LSCOLORS=ExDxDxDxCxDxDxCxCxExEx
LS_COLORS="di=1;34:ln=1;33:so=1;33:pi=1;33:ex=1;32:bd=1;"
LS_COLORS+="33:cd=1;33:su=1;32:sg=1;32:tw=1;34:ow=1;34"
export LS_COLORS


############################################################
##########  aliases  #######################################
############################################################

alias cd="cnl"
alias ..="cnl .."
alias ...="cnl ../.."
alias ....="cnl ../../.."

if command -v exa > /dev/null; then
  # FIXME: waiting on them to implement the following flags,
  # --no-permissions
  # --no-user
  # --no-time
  # which would get added to `ll` but not `lal`

  alias l="exa --group-directories-first --sort=Name --time-style=iso"
  alias ls="exa --group-directories-first --sort=Name --time-style=iso"
  alias la="exa --group-directories-first --sort=Name --time-style=iso --all"
  # alias ll="exa --group-directories-first --sort=Name --time-style=iso --long"
  alias ll="exa --group-directories-first --sort=Name --oneline"
  alias lal="exa --group-directories-first --sort=Name --time-style=iso --all --long"

  alias tree="exa --tree --group-directories-first --sort=Name --git-ignore --ignore-glob=.git"
  alias treea="exa --tree --group-directories-first --sort=Name --long --all"
  alias tree1="exa --tree --group-directories-first --sort=Name --all --level=1"
  alias tree2="exa --tree --group-directories-first --sort=Name --all --level=2"
  alias tree3="exa --tree --group-directories-first --sort=Name --all --level=3"
else
  alias ls="ls -GhF --color=always"
  alias ll="l -log"
  alias l="ls"
  alias la="l -A"
  alias l.="l -pd .*"
  alias lal="ll -A"
  alias l.l="ll -d .*"

  alias tree="tree --dirsfirst --noreport -ACF"
  alias treed="tree -d"
  alias tree1="tree -d -L 1"
  alias tree2="tree -d -L 2"
  alias treea="tree -a -I '.git'"
fi

export BAT_THEME="1337"
alias cat='bat'
alias find="fd"
alias grep="rg"

# prefix all aliases so that GnuPG uses pinentry-tty
alias g="DISPLAY='' git"
alias gi="g init"
alias gP="g push"
alias gp="g pull --rebase"
alias gb="g branch"
alias gco="g checkout"
alias ga="g add"
alias gaa="g add -A"
alias gap="g add -p"
alias gc="g commit"
alias gr="g reset"
alias gs="g status -sb --ignored"
alias gl="g log --graph --pretty=format:'%Cred%h %G? %Cgreen%cn %Cblue%cr %Creset%s'"
alias gd="g diff"
alias gD="g diff --cached"

# FIXME: aliases for diff
# (mainly tripped up by wanting to generally pipe into less -r)

alias tl='tmux list-sessions'
alias ta='tmux attach -t '
alias td='tmux detach'
alias tn='tmux new'

alias zl='zfs list'
alias zs='zpool status'

alias nrs='sudo nixos-rebuild switch'

alias rm="rm -i"
alias mkdir="mkdir -pv"
alias df="df -h"
alias dud="du -d 1 -h"
alias htop="HTOPRC=/etc/htoprc htop"
alias ns='nix-shell'
alias q="exit"

# recursively convert all the Ctrl-M dos line endings to unix
alias undoze='\find -type f -print0 | xargs -0 dos2unix'

# prevents leaking clipboard data to login forms
# function hides Ctrl+C default output if no arg is given
function pc() {
  [[ "$*" != "" ]] && echo '' | xclip && pass -c "$@"
}


############################################################
##########  functions  #####################################
############################################################

# link cd & ls
cnl() { \cd "$@" && ll; }

# colored man pages
man() { env \
  LESS_TERMCAP_mb=$'\e[01;31m' \
  LESS_TERMCAP_md=$'\e[01;31m' \
  LESS_TERMCAP_me=$'\e[0m' \
  LESS_TERMCAP_se=$'\e[0m' \
  LESS_TERMCAP_so=$'\e[01;33m' \
  LESS_TERMCAP_ue=$'\e[0m' \
  LESS_TERMCAP_us=$'\e[01;32m' \
  man "$@"
}

# extract archives
extract() {
  if [ -f "$1" ]; then
    case "$1" in
      *.tar.bz2) tar -jxvf "$1" ;;
      *.tar.gz) tar -zxvf "$1" ;;
      *.bz2) bunzip2 "$1" ;;
      *.gz) gunzip "$1" ;;
      *.tar) tar -xvf "$1" ;;
      *.tbz2) tar -jxvf "$1" ;;
      *.tgz) tar -zxvf "$1" ;;
      *.zip) unzip "$1" ;;
      *.ZIP) unzip "$1" ;;
      *.Z) uncompress "$1" ;;
      *.xz) tar -Jxvf "$1" ;;
      *) echo "{extraction-failed}" ;;
    esac
  else echo "{invalid-file}"; fi
}

# convert snake_case to CamelCase
# echo testing_this_thing | camelcase -> TestingThisThing
snake2camel() {
  perl -pe 's#(_|^)(.)#\u$2#g'
}

# set default permissions recursively
# needed on occasion when dealing with NTFS.
fixpermissions() {
  \find ./ -type d -exec chmod 755 {} \;
  \find ./ -type f -exec chmod 644 {} \;
}

# recursively apply dos2unix on the current directory.
autodos2unix() {
  \find . -type f -print0 | xargs -0 dos2unix
}

# alias to jump to common directories more easily,
# and jump there by default if launching in $HOME.
alias cds="\cd /_scratch"
alias cdp="\cd /_projects"
alias cdd="\cd /_deprecated"
alias cdb="\cd /_backups"
[[ "$PWD" == "$HOME" ]] && cds

